<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:jsp="http://java.sun.com/xml/ns/javaee/jsp" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name></display-name>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <listener>
     <listener-class>
        com.tsinghuadtv.www.util.session.MyHttpSessionListener  
     </listener-class>
  </listener>
  
  <!--默认的会话超时时间间隔，以分钟为单位  --> 
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>
    
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:applicationContext.xml</param-value>
  </context-param>
  <context-param>
    <param-name>spring.profiles.active</param-name>
    <param-value>production</param-value>
  </context-param>
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring-mvc.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
	 <servlet-name>default</servlet-name>
     <url-pattern>*.html</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.gif</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.jpg</url-pattern>
 </servlet-mapping>
  <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.png</url-pattern>
 </servlet-mapping>
 <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.js</url-pattern>
 </servlet-mapping>
  <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.json</url-pattern>
 </servlet-mapping>
  <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.svg</url-pattern>
 </servlet-mapping>
  <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.ttf</url-pattern>
 </servlet-mapping>
    <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.otf</url-pattern>
 </servlet-mapping>
   <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.woff</url-pattern>
 </servlet-mapping>
    <servlet-mapping>
     <servlet-name>default</servlet-name>
     <url-pattern>*.woff2</url-pattern>
 </servlet-mapping>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>false</param-value>
    </init-param>
  </filter>  
    <filter-mapping>
      <filter-name>encodingFilter</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>403</error-code>
    <location>/WEB-INF/page/error/403.jsp</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/page/error/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>400</error-code>
    <location>/WEB-INF/page/error/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/WEB-INF/page/error/500.jsp</location>
  </error-page>
  
  	<!-- 登陆验证码Kaptcha 2-->
	<servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.tsinghuadtv.www.util.verificode.KaptchaServlet</servlet-class>
		<init-param>
			<description>图片边框，合法值：yes , no</description>
			<param-name>kaptcha.border</param-name>
			<param-value>yes</param-value>
		</init-param>
		<init-param>
			<description>
				边框颜色，合法值： r,g,b (and optional alpha) 或者
				white,black,blue.
			</description>
			<param-name>kaptcha.border.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<description>边框厚度，合法值：>0</description>
			<param-name>kaptcha.border.thickness</param-name>
			<param-value>1</param-value>
		</init-param>
		<init-param>
			<description>图片宽 200</description>
			<param-name>kaptcha.image.width</param-name>
			<param-value>200</param-value>
		</init-param>
		<init-param>
			<description>图片高 50</description>
			<param-name>kaptcha.image.height</param-name>
			<param-value>50</param-value>
		</init-param>
		<init-param>
			<description>图片实现类</description>
			<param-name>kaptcha.producer.impl</param-name>
			<param-value>
				com.google.code.kaptcha.impl.DefaultKaptcha
			</param-value>
		</init-param>
		<init-param>
			<description>文本实现类</description>
			<param-name>kaptcha.textproducer.impl</param-name>
			<param-value>
				com.google.code.kaptcha.text.impl.DefaultTextCreator
			</param-value>
		</init-param>
		<init-param>
			<description>文本集合，验证码值从此集合中获取</description>
			<param-name>kaptcha.textproducer.char.string</param-name>
			<param-value>1234567890</param-value>
			<!--<param-value>abcde2345678gfynmnpwx</param-value>-->
			<!--<param-value>慕课网教程验证码实例</param-value> -->
		</init-param>
		<init-param>
			<description>验证码长度 5</description>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>2</param-value>
		</init-param>
		<init-param>
			<description>字体 Arial, Courier</description>
			<param-name>kaptcha.textproducer.font.names</param-name>
			<param-value>Arial, Courier</param-value>
		</init-param>
		<init-param>
			<description>字体大小 40px.</description>
			<param-name>kaptcha.textproducer.font.size</param-name>
			<param-value>40</param-value>
		</init-param>
		<init-param>
			<description>
				字体颜色，合法值： r,g,b 或者 white,black,blue.
			</description>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<description>文字间隔 2</description>
			<param-name>kaptcha.textproducer.char.space</param-name>
			<param-value>2</param-value>
		</init-param>
		<init-param>
			<description>干扰实现类</description>
			<param-name>kaptcha.noise.impl</param-name>
			<param-value>
				<!-- com.google.code.kaptcha.impl.NoNoise -->
				com.google.code.kaptcha.impl.DefaultNoise
			</param-value>
		</init-param>
		<init-param>
			<description>
				干扰颜色，合法值： r,g,b 或者 white,black,blue.
			</description>
			<param-name>kaptcha.noise.color</param-name>
			<param-value>black</param-value>
		</init-param>
		<init-param>
			<description>
				图片样式： 水纹com.google.code.kaptcha.impl.WaterRipple
				鱼眼com.google.code.kaptcha.impl.FishEyeGimpy
				阴影com.google.code.kaptcha.impl.ShadowGimpy
			</description>
			<param-name>kaptcha.obscurificator.impl</param-name>
			<param-value>
				com.google.code.kaptcha.impl.WaterRipple
			</param-value>
		</init-param>
		<init-param>
			<description>背景实现类</description>
			<param-name>kaptcha.background.impl</param-name>
			<param-value>
				com.google.code.kaptcha.impl.DefaultBackground
			</param-value>
		</init-param>
		<init-param>
			<description>背景颜色渐变，开始颜色</description>
			<param-name>kaptcha.background.clear.from</param-name>
			<param-value>green</param-value>
		</init-param>
		<init-param>
			<description>背景颜色渐变，结束颜色</description>
			<param-name>kaptcha.background.clear.to</param-name>
			<param-value>white</param-value>
		</init-param>
		<init-param>
			<description>文字渲染器</description>
			<param-name>kaptcha.word.impl</param-name>
			<param-value>
				com.google.code.kaptcha.text.impl.DefaultWordRenderer
			</param-value>
		</init-param>
		<init-param>
			<description>
				session中存放验证码的key键
			</description>
			<param-name>kaptcha.session.key</param-name>
			<param-value>KAPTCHA_SESSION_KEY</param-value>
		</init-param>
		<init-param>
			<description>
				The date the kaptcha is generated is put into the
				HttpSession. This is the key value for that item in the
				session.
			</description>
			<param-name>kaptcha.session.date</param-name>
			<param-value>KAPTCHA_SESSION_DATE</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/randomcode.jpg</url-pattern>
	</servlet-mapping>
  
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>